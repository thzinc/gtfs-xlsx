name: dotnet package

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - run: git checkout "${GITHUB_REF:11}"
      - uses: syncromatics/gogitver-action@v0.0.7
        id: gogitver
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0"
      - uses: actions/cache@v3
        with:
          path: artifacts
          key: ${{ steps.gogitver.outputs.version }}-artifacts
      - run: make build package
        env:
          VERSION: ${{ steps.gogitver.outputs.version }}
    outputs:
      version: ${{ steps.gogitver.outputs.version }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - uses: actions/cache@v3
        with:
          path: artifacts
          key: ${{ needs.build.outputs.version }}-artifacts
          fail-on-cache-miss: true
      - run: make ship
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.version }}
          release_name: Release ${{ needs.build.outputs.version }}
          draft: false
          prerelease: false
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux.tar.gz
          asset_name: linux.tar.gz
          asset_content_type: application/gzip
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/arm.tar.gz
          asset_name: arm.tar.gz
          asset_content_type: application/gzip
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/darwin.tar.gz
          asset_name: darwin.tar.gz
          asset_content_type: application/gzip
